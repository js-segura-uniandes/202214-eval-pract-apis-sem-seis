{
	"info": {
		"_postman_id": "9cfe3078-542f-41df-a2e5-e0f78ce533af",
		"name": "city-supermarket",
		"description": "This collection describes the resource Gastronomy in the API Gastronomic Culture",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17951773"
	},
	"item": [
		{
			"name": "Asociar un nuevo supermercado a una ciudad.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/{{city_id}}/supermarkets/{{supermarket_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{city_id}}",
						"supermarkets",
						"{{supermarket_id}}"
					]
				},
				"description": "This request creates a Gastronomy. The API returns the created resource with the assigned ID."
			},
			"response": [
				{
					"name": "Add a supermarket to a city",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cities/{{city_id}}/supermarkets/{{supermarket_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"{{city_id}}",
								"supermarkets",
								"{{supermarket_id}}"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"id\": \"818ab5a0-25e8-4045-a1e3-dfa2898c91d5\",\n    \"name\": \"Buenos aires\",\n    \"country\": \"Argentina\",\n    \"population\": 2890151,\n    \"supermarkets\": [\n        {\n            \"id\": \"9731e22a-9b9f-411e-be83-3f44d5a113ec\",\n            \"name\": \"supermercado coratiendas\",\n            \"lng\": 34,\n            \"lat\": 58,\n            \"url\": \"www.coratiendas.com\",\n            \"cities\": []\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Asociar un supermercado que no existe a una ciudad.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The supermarket with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/{{city_id}}/supermarkets/6c19a77d-3d87-4228-b4f9-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{city_id}}",
						"supermarkets",
						"6c19a77d-3d87-4228-b4f9-000000000000"
					]
				},
				"description": "This request creates a Gastronomy. The API returns the created resource with the assigned ID."
			},
			"response": [
				{
					"name": "Add an invalid supermarket to a city",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cities/{{city_id}}/supermarkets/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"{{city_id}}",
								"supermarkets",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The supermarket with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Obtener todos los supermercados que pertenecen a una ciudad.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/{{city_id}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{city_id}}",
						"supermarkets"
					]
				},
				"description": "This request retrieves all the gastronomies. The API returns an array with the information."
			},
			"response": [
				{
					"name": "Get all supermarkets of a city",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cities/{{city_id}}/supermarkets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"{{city_id}}",
								"supermarkets"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "[\n    {\n        \"id\": \"9731e22a-9b9f-411e-be83-3f44d5a113ec\",\n        \"name\": \"supermercado coratiendas\",\n        \"lng\": 34,\n        \"lat\": 58,\n        \"url\": \"www.coratiendas.com\"\n    }\n]"
				}
			]
		},
		{
			"name": "Obtener un supermercado asociado a una ciudad.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/{{city_id}}/supermarkets/{{supermarket_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{city_id}}",
						"supermarkets",
						"{{supermarket_id}}"
					]
				},
				"description": "This request retrieves a gastronomy by a given ID. The API returns a JSON object with the information."
			},
			"response": [
				{
					"name": "Get a supermarket of a city",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cities/{{city_id}}/supermarkets/{{supermarket_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"{{city_id}}",
								"supermarkets",
								"{{supermarket_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"id\": \"9731e22a-9b9f-411e-be83-3f44d5a113ec\",\n    \"name\": \"supermercado coratiendas\",\n    \"lng\": 34,\n    \"lat\": 58,\n    \"url\": \"www.coratiendas.com\"\n}"
				}
			]
		},
		{
			"name": "Obtener un supermercado que no est√° asociado a una ciudad.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {",
							"   pm.response.to.have.status(412);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The supermarket with the given id is not associated to the city\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/{{city_id}}/supermarkets/{{supermarket_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{city_id}}",
						"supermarkets",
						"{{supermarket_id_2}}"
					]
				},
				"description": "This request retrieves a gastronomy by a wrong given ID. The API returns a JSON object with an error."
			},
			"response": [
				{
					"name": "Get a supermarket of a non-associated city",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cities/{{city_id}}/supermarkets/{{supermarket_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"{{city_id}}",
								"supermarkets",
								"{{supermarket_id_2}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"statusCode\": 412,\n    \"message\": \"The supermarket with the given id is not associated to the city\"\n}\n"
				}
			]
		},
		{
			"name": "Actualizar los supermercados que est√°n asociados a una ciudad.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"name\": \"supermercado coratiendas\",\n        \"lng\": 34,\n        \"lat\": 58,\n        \"url\": \"www.coratiendas.com\",\n        \"id\": \"{{supermarket_id_2}}\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/{{city_id}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{city_id}}",
						"supermarkets"
					]
				},
				"description": "This request updates a gastronomy by a given ID. The API returns a JSON object with the updated restaurant."
			},
			"response": [
				{
					"name": "Update supermarkets of a city",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\": \"supermercado coratiendas\",\n        \"lng\": 34,\n        \"lat\": 58,\n        \"url\": \"www.coratiendas.com\",\n        \"id\": \"{{restaurant_id_2}}\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cities/{{city_id}}/supermarkets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"{{city_id}}",
								"supermarkets"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"id\": \"818ab5a0-25e8-4045-a1e3-dfa2898c91d5\",\n    \"name\": \"Buenos aires\",\n    \"country\": \"Argentina\",\n    \"population\": 2890151,\n    \"supermarkets\": [\n        {\n            \"name\": \"supermercado coratiendas\",\n            \"lng\": 34,\n            \"lat\": 58,\n            \"url\": \"www.coratiendas.com\",\n            \"id\": \"a283b1e7-6865-4648-a803-97a914dd2faf\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Actualizar los supermercados asociados a una ciudad, con un supermercado inexistente.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The supermarket with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"name\": \"supermercado coratiendas\",\n        \"lng\": 34,\n        \"lat\": 58,\n        \"url\": \"www.coratiendas.com\",\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/{{city_id}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{city_id}}",
						"supermarkets"
					]
				},
				"description": "This request updates a gastronomy by a wrong given ID. The API returns a JSON object with an error."
			},
			"response": [
				{
					"name": "Update invalid supermarkets of a city",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\": \"supermercado coratiendas\",\n        \"lng\": 34,\n        \"lat\": 58,\n        \"url\": \"www.coratiendas.com\",\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cities/{{city_id}}/supermarkets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"{{city_id}}",
								"supermarkets"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The supermarket with the given id was not found\"\n}\n"
				}
			]
		},
		{
			"name": "Eliminar un supermercado asociado a una ciudad.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/{{city_id}}/supermarkets/{{supermarket_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{city_id}}",
						"supermarkets",
						"{{supermarket_id}}"
					]
				},
				"description": "This request deletes a gastronomy by a given ID. The API returns a 204 code."
			},
			"response": [
				{
					"name": "Delete a supermarket of a city",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cities/{{city_id}}/supermarkets/{{supermarket_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"{{city_id}}",
								"supermarkets",
								"{{supermarket_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Eliminar un supermercado que no estaba previamente asociado a una ciudad.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The city with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "This request deletes a gastronomy by a wrong given ID. The API returns a JSON object with an error."
			},
			"response": [
				{
					"name": "Delete a supermarket of a non-associated city",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cities/{{city_id}}/supermarkets/{{supermarket_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"{{city_id}}",
								"supermarkets",
								"{{supermarket_id}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"statusCode\": 412,\n    \"message\": \"The supermarket with the given id is not associated to the city\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1"
		}
	]
}